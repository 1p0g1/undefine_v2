"use strict";(()=>{var e={};e.id=310,e.ids=[310],e.modules={2885:e=>{e.exports=require("@supabase/supabase-js")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},9926:e=>{e.exports=import("zod")},6249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,r){return r in t?t[r]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,r)):"function"==typeof t&&"default"===r?t:void 0}}})},141:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.r(t),r.d(t,{config:()=>d,default:()=>u,routeModule:()=>c});var o=r(1802),a=r(7153),n=r(6249),i=r(5274),l=e([i]);i=(l.then?(await l)():l)[0];let u=(0,n.l)(i,"default"),d=(0,n.l)(i,"config"),c=new o.PagesAPIRouteModule({definition:{kind:a.x.PAGES_API,page:"/api/guess",pathname:"/api/guess",bundlePath:"",filename:""},userland:i});s()}catch(e){s(e)}})},7274:(e,t,r)=>{r.d(t,{o:()=>s});function s(e){return async(t,r)=>{if(r.setHeader("Access-Control-Allow-Origin","*"),r.setHeader("Access-Control-Allow-Methods","GET, POST, OPTIONS"),r.setHeader("Access-Control-Allow-Headers","Content-Type, Player-ID, Authorization"),"OPTIONS"===t.method){r.status(204).end();return}return e(t,r)}}},5274:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.r(t),r.d(t,{default:()=>g});var o=r(2885),a=r(9085);r(8355);var n=r(7274),i=r(2693),l=r(3562),u=e([a]);a=(u.then?(await u)():u)[0];let m=(0,o.createClient)(a.O.SUPABASE_URL,a.O.SUPABASE_SERVICE_ROLE_KEY);async function d(e,t,r,s,o){if(!s)throw Error("Completion time is required for updating stats");let{data:a,error:n}=await m.from("user_stats").select("*").eq("player_id",e).single();if(n)throw console.error("[updateUserStats] Failed to fetch stats:",n),n;let i={games_played:(a?.games_played||0)+1,games_won:t?(a?.games_won||0)+1:a?.games_won||0,current_streak:t?(a?.current_streak||0)+1:0,longest_streak:t?Math.max(a?.longest_streak||0,(a?.current_streak||0)+1):a?.longest_streak||0,total_guesses:(a?.total_guesses||0)+r,average_guesses_per_game:((a?.total_guesses||0)+r)/((a?.games_played||0)+1),total_play_time_seconds:(a?.total_play_time_seconds||0)+s,total_score:(a?.total_score||0)+o.score,updated_at:new Date().toISOString()},{error:l}=await m.from("user_stats").update(i).eq("player_id",e);if(l)throw console.error("[updateUserStats] Failed to update stats:",l),l;return i}async function c(e,t,r,s,o,a){if(!s)throw Error("Completion time is required for creating score entry");let{error:n}=await m.from("scores").insert([{player_id:e,word_id:t,guesses_used:r,completion_time_seconds:s,was_correct:o,score:a.score,base_score:a.baseScore,guess_penalty:a.guessPenalty,time_penalty:a.timePenalty,hint_penalty:a.hintPenalty,submitted_at:new Date().toISOString()}]);if(n)throw console.error("[createScoreEntry] Failed to create score:",n),n}async function _(e,t,r,s,o){if(!s)throw Error("Completion time is required for updating leaderboard");let{data:a,error:n}=await m.from("leaderboard_summary").select("*").eq("word_id",t).order("score",{ascending:!1}).order("completion_time_seconds",{ascending:!0}).limit(10);if(n)throw console.error("[updateLeaderboardSummary] Failed to fetch leaderboard:",n),n;if(a.length<10||o.score>a[a.length-1].score||o.score===a[a.length-1].score&&s<a[a.length-1].completion_time_seconds){let{error:n}=await m.from("leaderboard_summary").insert([{player_id:e,word_id:t,rank:a.length+1,was_top_10:!0,score:o.score,guesses_used:r,completion_time_seconds:s,created_at:new Date().toISOString()}]);if(n)throw console.error("[updateLeaderboardSummary] Failed to insert leaderboard entry:",n),n}}let g=(0,n.o)(async function(e,t){if("POST"!==e.method)return t.status(405).json({error:"Method not allowed"});try{let{guess:r,gameId:s,wordId:o,start_time:a}=e.body,n=e.headers["player-id"]??"anonymous";if(console.log("[/api/guess] Processing guess:",{guess:r,gameId:s,playerId:n,wordId:o}),!r||!s||!o||!a){let e=[!r&&"guess",!s&&"gameId",!o&&"wordId",!a&&"start_time"].filter(Boolean);return console.error("[/api/guess] Missing required fields:",e),t.status(400).json({error:"Missing required fields",details:`Missing: ${e.join(", ")}`})}let{data:u,error:g}=await m.from("game_sessions").select(`
        id,
        word_id,
        revealed_clues,
        guesses,
        is_complete,
        start_time,
        clue_status,
        words (
          word,
          definition,
          etymology,
          first_letter,
          in_a_sentence,
          number_of_letters,
          equivalents,
          difficulty,
          date
        )
      `).eq("id",s).eq("word_id",o).single();if(g||!u)return console.error("[/api/guess] Failed to fetch game session:",{error:g,details:g?.details,hint:g?.hint,code:g?.code,gameId:s,wordId:o}),t.status(404).json({error:"Game session not found",details:"Invalid game session or word ID"});if(u.is_complete)return t.status(400).json({error:"Game session is already complete"});if(u.start_time!==a)return console.error("[/api/guess] Start time mismatch:",{session:u.start_time,request:a}),t.status(400).json({error:"Invalid start time",details:"Start time does not match game session"});let f=await (0,i.E)({guess:r,gameId:s,playerId:n,wordId:u.word_id,start_time:u.start_time},u.words.word,u.revealed_clues||[]),p=f.gameOver?Math.floor((Date.now()-new Date(u.start_time).getTime())/1e3):null,E=f.gameOver?(0,l.m)({guessesUsed:(u.guesses||[]).length+1,completionTimeSeconds:p||0,usedHint:!1,isWon:f.isCorrect}):null,{error:h}=await m.from("game_sessions").update({guesses:[...u.guesses||[],f.guess],revealed_clues:f.revealedClues.map(()=>!0),clue_status:f.revealedClues.reduce((e,t)=>({...e,[t]:!0}),u.clue_status||{}),is_complete:f.gameOver,is_won:f.isCorrect,end_time:f.gameOver?new Date().toISOString():null,score:E?.score||null,updated_at:new Date().toISOString()}).eq("id",s);if(h)return console.error("[/api/guess] Failed to update game session:",h),t.status(500).json({error:"Failed to update game session"});if(f.gameOver&&p&&E){let e=await d(n,f.isCorrect,u.guesses.length+1,p,E);return await c(n,u.word_id,u.guesses.length+1,p,f.isCorrect,E),await _(n,u.word_id,u.guesses.length+1,p,E),t.status(200).json({...f,score:E,stats:e})}t.status(200).json(f)}catch(e){console.error("[/api/guess] Error:",e),t.status(500).json({error:"Failed to submit guess"})}});s()}catch(e){s(e)}})},8355:(e,t,r)=>{r.d(t,{DD:()=>s,E6:()=>o,b6:()=>a});let s=["definition","equivalents","first_letter","in_a_sentence","number_of_letters","etymology"];function o(){return{definition:!1,equivalents:!1,first_letter:!1,in_a_sentence:!1,number_of_letters:!1,etymology:!1}}function a(e){if(e.length>s.length)return!1;for(let t=0;t<e.length;t++)if(e[t]!==s[t])return!1;return!0}if(6!==s.length)throw Error("CLUE_SEQUENCE must contain exactly 6 clues");if(new Set(s).size!==s.length)throw Error("CLUE_SEQUENCE contains duplicate clues");for(let[e,t]of Object.entries({D:"definition",E:"equivalents",F:"first_letter",I:"in_a_sentence",N:"number_of_letters",E2:"etymology"}))if(!s.includes(t))throw Error(`Invalid clue key mapping: ${e} -> ${t}`)},3562:(e,t,r)=>{r.d(t,{m:()=>o});let s={BASE_SCORE:1e3,GUESS_PENALTY:100,TIME_PENALTY_PER_10_SECONDS:10,HINT_PENALTY:200};function o(e){let{guessesUsed:t,completionTimeSeconds:r,usedHint:o,isWon:a}=e;if(!a)return{score:0,baseScore:s.BASE_SCORE,guessPenalty:0,timePenalty:0,hintPenalty:0};let n=Math.max(0,(t-1)*s.GUESS_PENALTY),i=Math.floor(r/10)*s.TIME_PENALTY_PER_10_SECONDS,l=o?s.HINT_PENALTY:0;return{score:Math.max(0,s.BASE_SCORE-n-i-l),baseScore:s.BASE_SCORE,guessPenalty:n,timePenalty:i,hintPenalty:l}}},9085:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.d(t,{O:()=>i});var o=r(9926),a=e([o]);let n=(o=(a.then?(await a)():a)[0]).z.object({SUPABASE_URL:o.z.string().url(),SUPABASE_SERVICE_ROLE_KEY:o.z.string(),SUPABASE_ANON_KEY:o.z.string(),DB_PROVIDER:o.z.literal("supabase"),NODE_ENV:o.z.enum(["development","production"]).default("production"),PORT:o.z.string().transform(Number).default("3001"),FRONTEND_URL:o.z.string().url().default("http://localhost:5173")}).safeParse({SUPABASE_URL:process.env.SUPABASE_URL,SUPABASE_SERVICE_ROLE_KEY:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVhY2xsand2c2ljZXpta2pubGJtIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0NDAyOTc3MiwiZXhwIjoyMDU5NjA1NzcyfQ.qAwl1_vgAK8qMv44dOWPoZ6u_w5PqwGEdRmOgXeKJbY",SUPABASE_ANON_KEY:process.env.SUPABASE_ANON_KEY,DB_PROVIDER:process.env.DB_PROVIDER,NODE_ENV:"production",PORT:process.env.PORT,FRONTEND_URL:process.env.FRONTEND_URL});if(!n.success)throw console.error("❌ Invalid environment variables:\n",Object.entries(n.error.flatten().fieldErrors).map(([e,t])=>`${e}: ${t?.join(", ")}`).join("\n")),Error("Invalid environment variables");let i=n.data;s()}catch(e){s(e)}})},2693:(e,t,r)=>{r.d(t,{E:()=>i});var s=r(8355);let o=e=>e?e.trim().toLowerCase().replace(/[\u200B\u200D\u200C\uFEFF-]/g,""):"",a=(e,t)=>o(e)===o(t),n=async(e,t,r,n)=>{if(!(0,s.b6)(r))throw Error("Invalid clue sequence");if(!Date.parse(n))throw Error("Invalid start_time format");let i=o(e),l=o(t),u=a(e,t),d=function(e,t){let r=[];for(let s=0;s<e.length;s++){if(s<t.length&&e[s]===t[s]){r.push(s);continue}t.includes(e[s])&&r.push(s)}return r}(i,l),c=d.length>0,_=[...r];if(!u){let e=function(e){for(let t of s.DD)if(!e.includes(t))return t;return null}(r);e&&_.push(e)}let m=u||_.length===s.DD.length;return{isCorrect:u,guess:i,isFuzzy:c,fuzzyPositions:d,gameOver:m,revealedClues:_,score:null}},i=async(e,t,r)=>{if("object"==typeof e){let{guess:s,start_time:o}=e;if(!t||!r||!o)throw Error("Missing required parameters for submitGuess");return n(s,t,r,o)}if(!t||!r)throw Error("Missing required parameters for submitGuess");throw Error("Legacy parameter format is no longer supported")}},7153:(e,t)=>{var r;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return r}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(r||(r={}))},1802:(e,t,r)=>{e.exports=r(145)}};var t=require("../../webpack-api-runtime.js");t.C(e);var r=t(t.s=141);module.exports=r})();