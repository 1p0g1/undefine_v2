"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/theme-status";
exports.ids = ["pages/api/theme-status"];
exports.modules = {

/***/ "@supabase/supabase-js":
/*!****************************************!*\
  !*** external "@supabase/supabase-js" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@supabase/supabase-js");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "zod":
/*!**********************!*\
  !*** external "zod" ***!
  \**********************/
/***/ ((module) => {

module.exports = import("zod");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftheme-status&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Ftheme-status.ts&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftheme-status&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Ftheme-status.ts&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_theme_status_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/theme-status.ts */ \"(api)/./pages/api/theme-status.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_theme_status_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_theme_status_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_theme_status_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_theme_status_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/theme-status\",\n        pathname: \"/api/theme-status\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_theme_status_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnRoZW1lLXN0YXR1cyZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTJGYXBpJTJGdGhlbWUtc3RhdHVzLnRzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQ3dEO0FBQ3hEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyx1REFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsdURBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELHFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5kZWZpbmUtdjIvPzcyYWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS90aGVtZS1zdGF0dXMudHNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS90aGVtZS1zdGF0dXNcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS90aGVtZS1zdGF0dXNcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftheme-status&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Ftheme-status.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/withCors.ts":
/*!*************************!*\
  !*** ./lib/withCors.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withCors: () => (/* binding */ withCors)\n/* harmony export */ });\n// NOTE: CORS is temporarily set to `*` during preview deployment testing.\n// TODO: Replace with origin-specific CORS once stable frontend/backend domains are set (e.g. api.undefine.vercel.app).\n// TODO: Add rate limiting and additional security measures before production.\nfunction withCors(handler) {\n    return async (req, res)=>{\n        // TEMPORARY: Allow all origins for dev/testing\n        res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n        res.setHeader(\"Access-Control-Allow-Methods\", \"GET, POST, OPTIONS\");\n        res.setHeader(\"Access-Control-Allow-Headers\", \"Content-Type, Player-ID, Authorization\");\n        // Handle preflight\n        if (req.method === \"OPTIONS\") {\n            res.status(204).end();\n            return;\n        }\n        // Process the actual request\n        return handler(req, res);\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvd2l0aENvcnMudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLDBFQUEwRTtBQUMxRSx1SEFBdUg7QUFDdkgsOEVBQThFO0FBTXZFLFNBQVNBLFNBQVNDLE9BQWdCO0lBQ3ZDLE9BQU8sT0FBT0MsS0FBS0M7UUFDakIsK0NBQStDO1FBQy9DQSxJQUFJQyxTQUFTLENBQUMsK0JBQStCO1FBQzdDRCxJQUFJQyxTQUFTLENBQUMsZ0NBQWdDO1FBQzlDRCxJQUFJQyxTQUFTLENBQUMsZ0NBQWdDO1FBRTlDLG1CQUFtQjtRQUNuQixJQUFJRixJQUFJRyxNQUFNLEtBQUssV0FBVztZQUM1QkYsSUFBSUcsTUFBTSxDQUFDLEtBQUtDLEdBQUc7WUFDbkI7UUFDRjtRQUVBLDZCQUE2QjtRQUM3QixPQUFPTixRQUFRQyxLQUFLQztJQUN0QjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5kZWZpbmUtdjIvLi9saWIvd2l0aENvcnMudHM/YjBjMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBOT1RFOiBDT1JTIGlzIHRlbXBvcmFyaWx5IHNldCB0byBgKmAgZHVyaW5nIHByZXZpZXcgZGVwbG95bWVudCB0ZXN0aW5nLlxuLy8gVE9ETzogUmVwbGFjZSB3aXRoIG9yaWdpbi1zcGVjaWZpYyBDT1JTIG9uY2Ugc3RhYmxlIGZyb250ZW5kL2JhY2tlbmQgZG9tYWlucyBhcmUgc2V0IChlLmcuIGFwaS51bmRlZmluZS52ZXJjZWwuYXBwKS5cbi8vIFRPRE86IEFkZCByYXRlIGxpbWl0aW5nIGFuZCBhZGRpdGlvbmFsIHNlY3VyaXR5IG1lYXN1cmVzIGJlZm9yZSBwcm9kdWN0aW9uLlxuXG5pbXBvcnQgdHlwZSB7IE5leHRBcGlSZXF1ZXN0LCBOZXh0QXBpUmVzcG9uc2UgfSBmcm9tICduZXh0JztcblxudHlwZSBIYW5kbGVyID0gKHJlcTogTmV4dEFwaVJlcXVlc3QsIHJlczogTmV4dEFwaVJlc3BvbnNlKSA9PiB2b2lkIHwgUHJvbWlzZTx2b2lkPjtcblxuZXhwb3J0IGZ1bmN0aW9uIHdpdGhDb3JzKGhhbmRsZXI6IEhhbmRsZXIpOiBIYW5kbGVyIHtcbiAgcmV0dXJuIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIC8vIFRFTVBPUkFSWTogQWxsb3cgYWxsIG9yaWdpbnMgZm9yIGRldi90ZXN0aW5nXG4gICAgcmVzLnNldEhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJywgJyonKTtcbiAgICByZXMuc2V0SGVhZGVyKCdBY2Nlc3MtQ29udHJvbC1BbGxvdy1NZXRob2RzJywgJ0dFVCwgUE9TVCwgT1BUSU9OUycpO1xuICAgIHJlcy5zZXRIZWFkZXIoJ0FjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnMnLCAnQ29udGVudC1UeXBlLCBQbGF5ZXItSUQsIEF1dGhvcml6YXRpb24nKTtcblxuICAgIC8vIEhhbmRsZSBwcmVmbGlnaHRcbiAgICBpZiAocmVxLm1ldGhvZCA9PT0gJ09QVElPTlMnKSB7XG4gICAgICByZXMuc3RhdHVzKDIwNCkuZW5kKCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gUHJvY2VzcyB0aGUgYWN0dWFsIHJlcXVlc3RcbiAgICByZXR1cm4gaGFuZGxlcihyZXEsIHJlcyk7XG4gIH07XG59ICJdLCJuYW1lcyI6WyJ3aXRoQ29ycyIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJzZXRIZWFkZXIiLCJtZXRob2QiLCJzdGF0dXMiLCJlbmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./lib/withCors.ts\n");

/***/ }),

/***/ "(api)/./pages/api/theme-status.ts":
/*!***********************************!*\
  !*** ./pages/api/theme-status.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"@supabase/supabase-js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _src_env_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../src/env.server */ \"(api)/./src/env.server.ts\");\n/* harmony import */ var _lib_withCors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/withCors */ \"(api)/./lib/withCors.ts\");\n/* harmony import */ var _src_game_theme__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../src/game/theme */ \"(api)/./src/game/theme.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_env_server__WEBPACK_IMPORTED_MODULE_1__, _src_game_theme__WEBPACK_IMPORTED_MODULE_3__]);\n([_src_env_server__WEBPACK_IMPORTED_MODULE_1__, _src_game_theme__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n/**\n * @fileoverview\n * Next.js API route for getting theme status and progress for the Theme of the Week feature.\n * \n * @api {get} /api/theme-status Get theme status\n * @apiQuery {string} player_id UUID of the player\n * @apiSuccess {Object} response\n * @apiSuccess {string|null} response.currentTheme Current week's theme (only if already guessed correctly)\n * @apiSuccess {boolean} response.hasActiveTheme Whether there's an active theme this week\n * @apiSuccess {Object} response.progress Theme progress information\n * @apiSuccess {Array} response.weeklyThemedWords Player's completed themed words from current week\n * @apiError {Object} error Error response\n */ \n\n\n\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(_src_env_server__WEBPACK_IMPORTED_MODULE_1__.env.SUPABASE_URL, _src_env_server__WEBPACK_IMPORTED_MODULE_1__.env.SUPABASE_SERVICE_ROLE_KEY);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_lib_withCors__WEBPACK_IMPORTED_MODULE_2__.withCors)(async function handler(req, res) {\n    if (req.method !== \"GET\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    try {\n        const playerId = req.headers[\"player-id\"] ?? req.query.player_id;\n        if (!playerId) {\n            return res.status(400).json({\n                error: \"Missing player_id\"\n            });\n        }\n        console.log(\"[/api/theme-status] Getting theme status for player:\", playerId);\n        // Get current theme\n        const currentTheme = await (0,_src_game_theme__WEBPACK_IMPORTED_MODULE_3__.getCurrentTheme)();\n        console.log(\"[/api/theme-status] Current theme from getCurrentTheme():\", currentTheme);\n        if (!currentTheme) {\n            console.log(\"[/api/theme-status] No current theme found, returning inactive status\");\n            return res.status(200).json({\n                hasActiveTheme: false,\n                progress: {\n                    totalWords: 0,\n                    completedWords: 0,\n                    themeGuess: null,\n                    canGuessTheme: false,\n                    hasGuessedToday: false,\n                    isCorrectGuess: false\n                },\n                weeklyThemedWords: []\n            });\n        }\n        // Get theme progress for player\n        const progress = await (0,_src_game_theme__WEBPACK_IMPORTED_MODULE_3__.getThemeProgress)(playerId, currentTheme);\n        // Get player's completed themed words from current week\n        const weeklyThemedWords = await (0,_src_game_theme__WEBPACK_IMPORTED_MODULE_3__.getPlayerWeeklyThemedWords)(playerId, currentTheme);\n        // Check if player's guess was correct (if they made one)\n        let isCorrectGuess = false;\n        if (progress.themeGuess) {\n            isCorrectGuess = (0,_src_game_theme__WEBPACK_IMPORTED_MODULE_3__.isThemeGuessCorrect)(progress.themeGuess, currentTheme);\n        }\n        const response = {\n            hasActiveTheme: true,\n            progress: {\n                ...progress,\n                isCorrectGuess\n            },\n            weeklyThemedWords\n        };\n        // Only reveal the actual theme if player guessed correctly\n        if (isCorrectGuess) {\n            response.currentTheme = currentTheme;\n        }\n        console.log(\"[/api/theme-status] Theme status:\", {\n            playerId,\n            currentTheme,\n            hasGuess: !!progress.themeGuess,\n            isCorrectGuess,\n            progress: progress,\n            weeklyWordsCount: weeklyThemedWords.length,\n            canGuessTheme: progress.canGuessTheme\n        });\n        return res.status(200).json(response);\n    } catch (error) {\n        console.error(\"[/api/theme-status] Error:\", error);\n        return res.status(500).json({\n            error: \"Failed to get theme status\"\n        });\n    }\n}));\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/theme-status.ts\n");

/***/ }),

/***/ "(api)/./src/env.server.ts":
/*!***************************!*\
  !*** ./src/env.server.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   env: () => (/* binding */ env)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"zod\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([zod__WEBPACK_IMPORTED_MODULE_0__]);\nzod__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n/**\n * DO NOT IMPORT THIS FILE IN FRONTEND CODE\n * This file includes secrets and only works with process.env\n */ \nconst serverEnvSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    // Required variables\n    SUPABASE_URL: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().url(),\n    SUPABASE_SERVICE_ROLE_KEY: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    SUPABASE_ANON_KEY: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    DB_PROVIDER: zod__WEBPACK_IMPORTED_MODULE_0__.z.literal(\"supabase\"),\n    NODE_ENV: zod__WEBPACK_IMPORTED_MODULE_0__.z.enum([\n        \"development\",\n        \"production\"\n    ]).default(\"production\"),\n    // Optional variables with defaults\n    PORT: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().transform(Number).default(\"3001\"),\n    FRONTEND_URL: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().url().default(\"http://localhost:5173\")\n});\n// Parse environment variables\nconst parsedEnv = serverEnvSchema.safeParse({\n    SUPABASE_URL: process.env.SUPABASE_URL,\n    SUPABASE_SERVICE_ROLE_KEY: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVhY2xsand2c2ljZXpta2pubGJtIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0NDAyOTc3MiwiZXhwIjoyMDU5NjA1NzcyfQ.qAwl1_vgAK8qMv44dOWPoZ6u_w5PqwGEdRmOgXeKJbY\",\n    SUPABASE_ANON_KEY: process.env.SUPABASE_ANON_KEY,\n    DB_PROVIDER: process.env.DB_PROVIDER,\n    NODE_ENV: \"development\",\n    PORT: process.env.PORT,\n    FRONTEND_URL: process.env.FRONTEND_URL\n});\nif (!parsedEnv.success) {\n    console.error(\"❌ Invalid environment variables:\\n\", Object.entries(parsedEnv.error.flatten().fieldErrors).map(([k, v])=>`${k}: ${v?.join(\", \")}`).join(\"\\n\"));\n    throw new Error(\"Invalid environment variables\");\n}\nconst env = parsedEnv.data;\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvZW52LnNlcnZlci50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7Q0FHQyxHQUV1QjtBQUV4QixNQUFNQyxrQkFBa0JELGtDQUFDQSxDQUFDRSxNQUFNLENBQUM7SUFDL0IscUJBQXFCO0lBQ3JCQyxjQUFjSCxrQ0FBQ0EsQ0FBQ0ksTUFBTSxHQUFHQyxHQUFHO0lBQzVCQywyQkFBMkJOLGtDQUFDQSxDQUFDSSxNQUFNO0lBQ25DRyxtQkFBbUJQLGtDQUFDQSxDQUFDSSxNQUFNO0lBQzNCSSxhQUFhUixrQ0FBQ0EsQ0FBQ1MsT0FBTyxDQUFDO0lBQ3ZCQyxVQUFVVixrQ0FBQ0EsQ0FBQ1csSUFBSSxDQUFDO1FBQUM7UUFBZTtLQUFhLEVBQUVDLE9BQU8sQ0FBQztJQUV4RCxtQ0FBbUM7SUFDbkNDLE1BQU1iLGtDQUFDQSxDQUFDSSxNQUFNLEdBQUdVLFNBQVMsQ0FBQ0MsUUFBUUgsT0FBTyxDQUFDO0lBQzNDSSxjQUFjaEIsa0NBQUNBLENBQUNJLE1BQU0sR0FBR0MsR0FBRyxHQUFHTyxPQUFPLENBQUM7QUFDekM7QUFFQSw4QkFBOEI7QUFDOUIsTUFBTUssWUFBWWhCLGdCQUFnQmlCLFNBQVMsQ0FBQztJQUMxQ2YsY0FBY2dCLFFBQVFDLEdBQUcsQ0FBQ2pCLFlBQVk7SUFDdENHLDJCQUEyQmEsNk5BQXFDO0lBQ2hFWixtQkFBbUJZLFFBQVFDLEdBQUcsQ0FBQ2IsaUJBQWlCO0lBQ2hEQyxhQUFhVyxRQUFRQyxHQUFHLENBQUNaLFdBQVc7SUFDcENFLFVBMUJGO0lBMkJFRyxNQUFNTSxRQUFRQyxHQUFHLENBQUNQLElBQUk7SUFDdEJHLGNBQWNHLFFBQVFDLEdBQUcsQ0FBQ0osWUFBWTtBQUN4QztBQUVBLElBQUksQ0FBQ0MsVUFBVUksT0FBTyxFQUFFO0lBQ3RCQyxRQUFRQyxLQUFLLENBQ1gsc0NBQ0FDLE9BQU9DLE9BQU8sQ0FBQ1IsVUFBVU0sS0FBSyxDQUFDRyxPQUFPLEdBQUdDLFdBQVcsRUFBRUMsR0FBRyxDQUFDLENBQUMsQ0FBQ0MsR0FBR0MsRUFBRSxHQUFLLENBQUMsRUFBRUQsRUFBRSxFQUFFLEVBQUVDLEdBQUdDLEtBQUssTUFBTSxDQUFDLEVBQUVBLElBQUksQ0FBQztJQUV2RyxNQUFNLElBQUlDLE1BQU07QUFDbEI7QUFFTyxNQUFNWixNQUFNSCxVQUFVZ0IsSUFBSSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5kZWZpbmUtdjIvLi9zcmMvZW52LnNlcnZlci50cz9kOWFmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRE8gTk9UIElNUE9SVCBUSElTIEZJTEUgSU4gRlJPTlRFTkQgQ09ERVxuICogVGhpcyBmaWxlIGluY2x1ZGVzIHNlY3JldHMgYW5kIG9ubHkgd29ya3Mgd2l0aCBwcm9jZXNzLmVudlxuICovXG5cbmltcG9ydCB7IHogfSBmcm9tICd6b2QnO1xuXG5jb25zdCBzZXJ2ZXJFbnZTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIC8vIFJlcXVpcmVkIHZhcmlhYmxlc1xuICBTVVBBQkFTRV9VUkw6IHouc3RyaW5nKCkudXJsKCksXG4gIFNVUEFCQVNFX1NFUlZJQ0VfUk9MRV9LRVk6IHouc3RyaW5nKCksXG4gIFNVUEFCQVNFX0FOT05fS0VZOiB6LnN0cmluZygpLFxuICBEQl9QUk9WSURFUjogei5saXRlcmFsKCdzdXBhYmFzZScpLCAgLy8gTXVzdCBiZSAnc3VwYWJhc2UnIGluIHByb2R1Y3Rpb25cbiAgTk9ERV9FTlY6IHouZW51bShbJ2RldmVsb3BtZW50JywgJ3Byb2R1Y3Rpb24nXSkuZGVmYXVsdCgncHJvZHVjdGlvbicpLCAgLy8gRGVmYXVsdCB0byBwcm9kdWN0aW9uXG4gIFxuICAvLyBPcHRpb25hbCB2YXJpYWJsZXMgd2l0aCBkZWZhdWx0c1xuICBQT1JUOiB6LnN0cmluZygpLnRyYW5zZm9ybShOdW1iZXIpLmRlZmF1bHQoJzMwMDEnKSxcbiAgRlJPTlRFTkRfVVJMOiB6LnN0cmluZygpLnVybCgpLmRlZmF1bHQoJ2h0dHA6Ly9sb2NhbGhvc3Q6NTE3MycpLFxufSk7XG5cbi8vIFBhcnNlIGVudmlyb25tZW50IHZhcmlhYmxlc1xuY29uc3QgcGFyc2VkRW52ID0gc2VydmVyRW52U2NoZW1hLnNhZmVQYXJzZSh7XG4gIFNVUEFCQVNFX1VSTDogcHJvY2Vzcy5lbnYuU1VQQUJBU0VfVVJMLFxuICBTVVBBQkFTRV9TRVJWSUNFX1JPTEVfS0VZOiBwcm9jZXNzLmVudi5TVVBBQkFTRV9TRVJWSUNFX1JPTEVfS0VZLFxuICBTVVBBQkFTRV9BTk9OX0tFWTogcHJvY2Vzcy5lbnYuU1VQQUJBU0VfQU5PTl9LRVksXG4gIERCX1BST1ZJREVSOiBwcm9jZXNzLmVudi5EQl9QUk9WSURFUixcbiAgTk9ERV9FTlY6IHByb2Nlc3MuZW52Lk5PREVfRU5WLFxuICBQT1JUOiBwcm9jZXNzLmVudi5QT1JULFxuICBGUk9OVEVORF9VUkw6IHByb2Nlc3MuZW52LkZST05URU5EX1VSTCxcbn0pO1xuXG5pZiAoIXBhcnNlZEVudi5zdWNjZXNzKSB7XG4gIGNvbnNvbGUuZXJyb3IoXG4gICAgJ+KdjCBJbnZhbGlkIGVudmlyb25tZW50IHZhcmlhYmxlczpcXG4nLFxuICAgIE9iamVjdC5lbnRyaWVzKHBhcnNlZEVudi5lcnJvci5mbGF0dGVuKCkuZmllbGRFcnJvcnMpLm1hcCgoW2ssIHZdKSA9PiBgJHtrfTogJHt2Py5qb2luKCcsICcpfWApLmpvaW4oJ1xcbicpXG4gICk7XG4gIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBlbnZpcm9ubWVudCB2YXJpYWJsZXMnKTtcbn1cblxuZXhwb3J0IGNvbnN0IGVudiA9IHBhcnNlZEVudi5kYXRhOyAiXSwibmFtZXMiOlsieiIsInNlcnZlckVudlNjaGVtYSIsIm9iamVjdCIsIlNVUEFCQVNFX1VSTCIsInN0cmluZyIsInVybCIsIlNVUEFCQVNFX1NFUlZJQ0VfUk9MRV9LRVkiLCJTVVBBQkFTRV9BTk9OX0tFWSIsIkRCX1BST1ZJREVSIiwibGl0ZXJhbCIsIk5PREVfRU5WIiwiZW51bSIsImRlZmF1bHQiLCJQT1JUIiwidHJhbnNmb3JtIiwiTnVtYmVyIiwiRlJPTlRFTkRfVVJMIiwicGFyc2VkRW52Iiwic2FmZVBhcnNlIiwicHJvY2VzcyIsImVudiIsInN1Y2Nlc3MiLCJjb25zb2xlIiwiZXJyb3IiLCJPYmplY3QiLCJlbnRyaWVzIiwiZmxhdHRlbiIsImZpZWxkRXJyb3JzIiwibWFwIiwiayIsInYiLCJqb2luIiwiRXJyb3IiLCJkYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/env.server.ts\n");

/***/ }),

/***/ "(api)/./src/game/theme.ts":
/*!***************************!*\
  !*** ./src/game/theme.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCurrentTheme: () => (/* binding */ getCurrentTheme),\n/* harmony export */   getPlayerThemeStats: () => (/* binding */ getPlayerThemeStats),\n/* harmony export */   getPlayerWeeklyThemedWords: () => (/* binding */ getPlayerWeeklyThemedWords),\n/* harmony export */   getThemeForDate: () => (/* binding */ getThemeForDate),\n/* harmony export */   getThemeProgress: () => (/* binding */ getThemeProgress),\n/* harmony export */   getWordsForTheme: () => (/* binding */ getWordsForTheme),\n/* harmony export */   isThemeGuessCorrect: () => (/* binding */ isThemeGuessCorrect),\n/* harmony export */   submitThemeAttempt: () => (/* binding */ submitThemeAttempt)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"@supabase/supabase-js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _env_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../env.server */ \"(api)/./src/env.server.ts\");\n/* harmony import */ var _utils_text__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/text */ \"(api)/./src/utils/text.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_env_server__WEBPACK_IMPORTED_MODULE_1__]);\n_env_server__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n/**\n * Theme utilities for the Theme of the Week feature\n */ \n\n\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(_env_server__WEBPACK_IMPORTED_MODULE_1__.env.SUPABASE_URL, _env_server__WEBPACK_IMPORTED_MODULE_1__.env.SUPABASE_SERVICE_ROLE_KEY);\n/**\n * Get the theme for a specific date's week\n */ async function getThemeForDate(date) {\n    try {\n        const targetDate = new Date(date);\n        const weekStart = getWeekStart(targetDate);\n        const weekEnd = getWeekEnd(targetDate);\n        console.log(\"[getThemeForDate] Looking for theme between:\", {\n            date,\n            weekStart: weekStart.toISOString().split(\"T\")[0],\n            weekEnd: weekEnd.toISOString().split(\"T\")[0]\n        });\n        const { data, error } = await supabase.from(\"words\").select(\"theme\").gte(\"date\", weekStart.toISOString().split(\"T\")[0]).lte(\"date\", weekEnd.toISOString().split(\"T\")[0]).not(\"theme\", \"is\", null).order(\"date\", {\n            ascending: true\n        }).limit(1);\n        if (error) {\n            console.error(\"[getThemeForDate] Database error:\", error);\n            return null;\n        }\n        const theme = data?.[0]?.theme || null;\n        console.log(\"[getThemeForDate] Found theme:\", theme);\n        return theme;\n    } catch (error) {\n        console.error(\"[getThemeForDate] Error:\", error);\n        return null;\n    }\n}\n/**\n * Get all words for a specific theme\n */ async function getWordsForTheme(theme) {\n    try {\n        const { data, error } = await supabase.from(\"words\").select(\"id, word, date\").eq(\"theme\", theme).order(\"date\", {\n            ascending: true\n        });\n        if (error) {\n            console.error(\"[getWordsForTheme] Database error:\", error);\n            return [];\n        }\n        return data || [];\n    } catch (error) {\n        console.error(\"[getWordsForTheme] Error:\", error);\n        return [];\n    }\n}\n/**\n * Check if a theme guess is correct using fuzzy matching\n */ function isThemeGuessCorrect(guess, actualTheme) {\n    if (!guess || !actualTheme) return false;\n    const normalizedGuess = (0,_utils_text__WEBPACK_IMPORTED_MODULE_2__.normalizeText)(guess);\n    const normalizedTheme = (0,_utils_text__WEBPACK_IMPORTED_MODULE_2__.normalizeText)(actualTheme);\n    // Exact match\n    if (normalizedGuess === normalizedTheme) return true;\n    // Define theme synonyms for common themes\n    const themeSynonyms = {\n        \"emotions\": [\n            \"feelings\",\n            \"moods\",\n            \"sentiments\",\n            \"emotions\"\n        ],\n        \"space\": [\n            \"astronomy\",\n            \"cosmos\",\n            \"universe\",\n            \"celestial\",\n            \"space\"\n        ],\n        \"animals\": [\n            \"creatures\",\n            \"wildlife\",\n            \"beasts\",\n            \"fauna\",\n            \"animals\"\n        ],\n        \"food\": [\n            \"cuisine\",\n            \"meals\",\n            \"eating\",\n            \"cooking\",\n            \"food\"\n        ],\n        \"colors\": [\n            \"colours\",\n            \"hues\",\n            \"shades\",\n            \"tints\",\n            \"colors\"\n        ],\n        \"weather\": [\n            \"climate\",\n            \"meteorology\",\n            \"atmospheric\",\n            \"weather\"\n        ],\n        \"music\": [\n            \"musical\",\n            \"songs\",\n            \"melodies\",\n            \"instruments\",\n            \"music\"\n        ],\n        \"sports\": [\n            \"athletics\",\n            \"games\",\n            \"competition\",\n            \"physical\",\n            \"sports\"\n        ],\n        \"language\": [\n            \"words\",\n            \"vocabulary\",\n            \"linguistics\",\n            \"speech\",\n            \"terminology\",\n            \"lexicon\",\n            \"language\"\n        ]\n    };\n    // Get synonyms for the actual theme\n    const synonyms = themeSynonyms[normalizedTheme] || [\n        normalizedTheme\n    ];\n    // Check if guess matches any synonym\n    if (synonyms.some((synonym)=>(0,_utils_text__WEBPACK_IMPORTED_MODULE_2__.normalizeText)(synonym) === normalizedGuess)) {\n        return true;\n    }\n    // Check partial matches (for compound themes)\n    if (synonyms.some((synonym)=>normalizedGuess.includes((0,_utils_text__WEBPACK_IMPORTED_MODULE_2__.normalizeText)(synonym)) || (0,_utils_text__WEBPACK_IMPORTED_MODULE_2__.normalizeText)(synonym).includes(normalizedGuess))) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get week start date (Monday) for a given date\n */ function getWeekStart(date) {\n    const result = new Date(date);\n    const day = result.getDay();\n    const diff = result.getDate() - day + (day === 0 ? -6 : 1); // Adjust when day is Sunday\n    result.setDate(diff);\n    result.setHours(0, 0, 0, 0);\n    return result;\n}\n/**\n * Get week end date (Sunday) for a given date\n */ function getWeekEnd(date) {\n    const result = getWeekStart(date);\n    result.setDate(result.getDate() + 6);\n    result.setHours(23, 59, 59, 999);\n    return result;\n}\n/**\n * Get current week's theme\n */ async function getCurrentTheme() {\n    const today = new Date().toISOString().split(\"T\")[0];\n    return getThemeForDate(today);\n}\n/**\n * Submit a theme attempt (one per day per theme)\n */ async function submitThemeAttempt(playerId, theme, guess) {\n    try {\n        // Check if player already guessed today\n        const today = new Date().toISOString().split(\"T\")[0];\n        const { data: existingAttempt } = await supabase.from(\"theme_attempts\").select(\"id\").eq(\"player_id\", playerId).eq(\"theme\", theme).eq(\"attempt_date\", today).single();\n        if (existingAttempt) {\n            return {\n                success: false,\n                isCorrect: false,\n                alreadyGuessedToday: true,\n                wordsCompleted: 0,\n                totalGuesses: 0\n            };\n        }\n        // Get statistics at time of guess\n        const progress = await getThemeProgress(playerId, theme);\n        const { data: totalGuessStats } = await supabase.from(\"game_sessions\").select(\"guesses\").eq(\"player_id\", playerId).eq(\"is_complete\", true);\n        const totalWordGuesses = totalGuessStats?.reduce((sum, session)=>sum + (session.guesses?.length || 0), 0) || 0;\n        // Validate the guess\n        const isCorrect = isThemeGuessCorrect(guess, theme);\n        // Insert theme attempt\n        const { error: insertError } = await supabase.from(\"theme_attempts\").insert({\n            player_id: playerId,\n            theme,\n            guess: guess.trim(),\n            is_correct: isCorrect,\n            attempt_date: today,\n            words_completed_when_guessed: progress.completedWords,\n            total_word_guesses: totalWordGuesses\n        });\n        if (insertError) {\n            console.error(\"[submitThemeAttempt] Insert error:\", insertError);\n            return {\n                success: false,\n                isCorrect: false,\n                alreadyGuessedToday: false,\n                wordsCompleted: progress.completedWords,\n                totalGuesses: totalWordGuesses\n            };\n        }\n        return {\n            success: true,\n            isCorrect,\n            alreadyGuessedToday: false,\n            wordsCompleted: progress.completedWords,\n            totalGuesses: totalWordGuesses\n        };\n    } catch (error) {\n        console.error(\"[submitThemeAttempt] Error:\", error);\n        return {\n            success: false,\n            isCorrect: false,\n            alreadyGuessedToday: false,\n            wordsCompleted: 0,\n            totalGuesses: 0\n        };\n    }\n}\n/**\n * Get theme statistics for a player\n */ async function getPlayerThemeStats(playerId) {\n    try {\n        const { data: attempts, error } = await supabase.from(\"theme_attempts\").select(\"theme, is_correct, words_completed_when_guessed\").eq(\"player_id\", playerId);\n        if (error) {\n            console.error(\"[getPlayerThemeStats] Error:\", error);\n            return {\n                totalThemeAttempts: 0,\n                correctThemeGuesses: 0,\n                averageAttemptsPerTheme: 0,\n                averageWordsCompletedWhenGuessing: 0,\n                themesGuessed: []\n            };\n        }\n        const totalAttempts = attempts?.length || 0;\n        const correctGuesses = attempts?.filter((a)=>a.is_correct).length || 0;\n        const uniqueThemes = Array.from(new Set(attempts?.map((a)=>a.theme) || []));\n        const averageAttempts = uniqueThemes.length > 0 ? totalAttempts / uniqueThemes.length : 0;\n        const averageWordsCompleted = totalAttempts > 0 ? (attempts?.reduce((sum, a)=>sum + (a.words_completed_when_guessed || 0), 0) || 0) / totalAttempts : 0;\n        return {\n            totalThemeAttempts: totalAttempts,\n            correctThemeGuesses: correctGuesses,\n            averageAttemptsPerTheme: Math.round(averageAttempts * 100) / 100,\n            averageWordsCompletedWhenGuessing: Math.round(averageWordsCompleted * 100) / 100,\n            themesGuessed: attempts?.filter((a)=>a.is_correct).map((a)=>a.theme) || []\n        };\n    } catch (error) {\n        console.error(\"[getPlayerThemeStats] Error:\", error);\n        return {\n            totalThemeAttempts: 0,\n            correctThemeGuesses: 0,\n            averageAttemptsPerTheme: 0,\n            averageWordsCompletedWhenGuessing: 0,\n            themesGuessed: []\n        };\n    }\n}\n/**\n * Get theme progress for a player\n */ async function getThemeProgress(playerId, theme) {\n    try {\n        // Get all words for this theme\n        const themeWords = await getWordsForTheme(theme);\n        // Get player's game sessions for this theme's words\n        const wordIds = themeWords.map((w)=>w.id);\n        const { data: sessions, error } = await supabase.from(\"game_sessions\").select(\"word_id, is_complete\").eq(\"player_id\", playerId).in(\"word_id\", wordIds);\n        if (error) {\n            console.error(\"[getThemeProgress] Database error:\", error);\n            return {\n                totalWords: themeWords.length,\n                completedWords: 0,\n                themeGuess: null,\n                canGuessTheme: false,\n                hasGuessedToday: false,\n                isCorrectGuess: false\n            };\n        }\n        const completedSessions = sessions?.filter((s)=>s.is_complete) || [];\n        // Check today's theme attempt\n        const today = new Date().toISOString().split(\"T\")[0];\n        const { data: todayAttempt, error: attemptError } = await supabase.from(\"theme_attempts\").select(\"guess, is_correct\").eq(\"player_id\", playerId).eq(\"theme\", theme).eq(\"attempt_date\", today).single();\n        if (attemptError && attemptError.code !== \"PGRST116\") {\n            console.error(\"[getThemeProgress] Theme attempt error:\", attemptError);\n        }\n        // Get completed words from this week only\n        const weeklyWords = await getPlayerWeeklyThemedWords(playerId, theme);\n        const hasCompletedWordThisWeek = weeklyWords.length > 0;\n        return {\n            totalWords: themeWords.length,\n            completedWords: completedSessions.length,\n            themeGuess: todayAttempt?.guess || null,\n            canGuessTheme: hasCompletedWordThisWeek && !todayAttempt,\n            hasGuessedToday: !!todayAttempt,\n            isCorrectGuess: todayAttempt?.is_correct || false\n        };\n    } catch (error) {\n        console.error(\"[getThemeProgress] Error:\", error);\n        return {\n            totalWords: 0,\n            completedWords: 0,\n            themeGuess: null,\n            canGuessTheme: false,\n            hasGuessedToday: false,\n            isCorrectGuess: false\n        };\n    }\n}\n/**\n * Get current theme week boundaries (Monday-Sunday)\n */ function getThemeWeekBoundaries(date = new Date()) {\n    const monday = getWeekStart(date);\n    const sunday = getWeekEnd(date);\n    return {\n        monday,\n        sunday\n    };\n}\n/**\n * Get player's completed themed words for current week only\n * This is the core logic for weekly words display feature\n */ async function getPlayerWeeklyThemedWords(playerId, theme) {\n    try {\n        const { monday, sunday } = getThemeWeekBoundaries();\n        console.log(\"[getPlayerWeeklyThemedWords] Getting weekly themed words for player:\", {\n            playerId,\n            theme,\n            weekStart: monday.toISOString().split(\"T\")[0],\n            weekEnd: sunday.toISOString().split(\"T\")[0]\n        });\n        // Find all words from current week with matching theme\n        const { data: themedWords, error: wordsError } = await supabase.from(\"words\").select(\"id, word, date\").eq(\"theme\", theme).gte(\"date\", monday.toISOString().split(\"T\")[0]).lte(\"date\", sunday.toISOString().split(\"T\")[0]).order(\"date\", {\n            ascending: true\n        });\n        if (wordsError) {\n            console.error(\"[getPlayerWeeklyThemedWords] Error fetching themed words:\", wordsError);\n            return [];\n        }\n        if (!themedWords || themedWords.length === 0) {\n            console.log(\"[getPlayerWeeklyThemedWords] No themed words found for current week\");\n            return [];\n        }\n        const wordIds = themedWords.map((w)=>w.id);\n        // Find which ones player has completed using game_sessions (consistent with getThemeProgress)\n        const { data: completedSessions, error: sessionsError } = await supabase.from(\"game_sessions\").select(\"word_id, created_at\").eq(\"player_id\", playerId).eq(\"is_complete\", true).in(\"word_id\", wordIds);\n        if (sessionsError) {\n            console.error(\"[getPlayerWeeklyThemedWords] Error fetching completed sessions:\", sessionsError);\n            return [];\n        }\n        // Match completed words with their theme word data\n        const completedWords = themedWords.filter((word)=>completedSessions?.some((session)=>session.word_id === word.id)).map((word)=>{\n            const session = completedSessions?.find((s)=>s.word_id === word.id);\n            return {\n                id: word.id,\n                word: word.word,\n                date: word.date,\n                completedOn: session?.created_at || word.date\n            };\n        });\n        console.log(\"[getPlayerWeeklyThemedWords] Found completed themed words:\", {\n            totalThemedWords: themedWords.length,\n            completedCount: completedWords.length,\n            completedWords: completedWords.map((w)=>({\n                    word: w.word,\n                    date: w.date\n                }))\n        });\n        return completedWords;\n    } catch (error) {\n        console.error(\"[getPlayerWeeklyThemedWords] Error:\", error);\n        return [];\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/game/theme.ts\n");

/***/ }),

/***/ "(api)/./src/utils/text.ts":
/*!***************************!*\
  !*** ./src/utils/text.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizeText: () => (/* binding */ normalizeText),\n/* harmony export */   normalizedEquals: () => (/* binding */ normalizedEquals),\n/* harmony export */   normalizedIncludes: () => (/* binding */ normalizedIncludes)\n/* harmony export */ });\n/**\n * Utility functions for text normalization and manipulation\n */ /**\n * Normalizes text by:\n * - Trimming whitespace\n * - Converting to lowercase\n * - Removing accents and diacritics\n * - Removing invisible Unicode characters and hyphens\n * \n * @param text The text to normalize\n * @returns The normalized text\n */ const normalizeText = (text)=>{\n    if (!text) return \"\";\n    return text.trim() // Remove leading/trailing whitespace\n    .toLowerCase() // Convert to lowercase\n    .normalize(\"NFD\") // Decompose accented characters\n    .replace(/[\\u0300-\\u036f]/g, \"\") // Remove combining diacritical marks\n    .replace(/[\\u200B\\u200D\\u200C\\uFEFF-]/g, \"\"); // Remove zero-width spaces and hyphens\n};\n/**\n * Checks if two strings are equal after normalization\n * \n * @param a First string to compare\n * @param b Second string to compare\n * @returns True if strings are equal after normalization\n */ const normalizedEquals = (a, b)=>{\n    return normalizeText(a) === normalizeText(b);\n};\n/**\n * Checks if a string contains another string after normalization\n * \n * @param text The text to search in\n * @param search The text to search for\n * @returns True if normalized text contains normalized search\n */ const normalizedIncludes = (text, search)=>{\n    return normalizeText(text).includes(normalizeText(search));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvdXRpbHMvdGV4dC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7Q0FFQyxHQUVEOzs7Ozs7Ozs7Q0FTQyxHQUNNLE1BQU1BLGdCQUFnQixDQUFDQztJQUM1QixJQUFJLENBQUNBLE1BQU0sT0FBTztJQUVsQixPQUFPQSxLQUNKQyxJQUFJLEdBQUcscUNBQXFDO0tBQzVDQyxXQUFXLEdBQUcsdUJBQXVCO0tBQ3JDQyxTQUFTLENBQUMsT0FBTyxnQ0FBZ0M7S0FDakRDLE9BQU8sQ0FBQyxvQkFBb0IsSUFBSSxxQ0FBcUM7S0FDckVBLE9BQU8sQ0FBQyxnQ0FBZ0MsS0FBSyx1Q0FBdUM7QUFDekYsRUFBRTtBQUVGOzs7Ozs7Q0FNQyxHQUNNLE1BQU1DLG1CQUFtQixDQUFDQyxHQUFXQztJQUMxQyxPQUFPUixjQUFjTyxPQUFPUCxjQUFjUTtBQUM1QyxFQUFFO0FBRUY7Ozs7OztDQU1DLEdBQ00sTUFBTUMscUJBQXFCLENBQUNSLE1BQWNTO0lBQy9DLE9BQU9WLGNBQWNDLE1BQU1VLFFBQVEsQ0FBQ1gsY0FBY1U7QUFDcEQsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL3VuZGVmaW5lLXYyLy4vc3JjL3V0aWxzL3RleHQudHM/ODk1MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFV0aWxpdHkgZnVuY3Rpb25zIGZvciB0ZXh0IG5vcm1hbGl6YXRpb24gYW5kIG1hbmlwdWxhdGlvblxuICovXG5cbi8qKlxuICogTm9ybWFsaXplcyB0ZXh0IGJ5OlxuICogLSBUcmltbWluZyB3aGl0ZXNwYWNlXG4gKiAtIENvbnZlcnRpbmcgdG8gbG93ZXJjYXNlXG4gKiAtIFJlbW92aW5nIGFjY2VudHMgYW5kIGRpYWNyaXRpY3NcbiAqIC0gUmVtb3ZpbmcgaW52aXNpYmxlIFVuaWNvZGUgY2hhcmFjdGVycyBhbmQgaHlwaGVuc1xuICogXG4gKiBAcGFyYW0gdGV4dCBUaGUgdGV4dCB0byBub3JtYWxpemVcbiAqIEByZXR1cm5zIFRoZSBub3JtYWxpemVkIHRleHRcbiAqL1xuZXhwb3J0IGNvbnN0IG5vcm1hbGl6ZVRleHQgPSAodGV4dDogc3RyaW5nKTogc3RyaW5nID0+IHtcbiAgaWYgKCF0ZXh0KSByZXR1cm4gJyc7XG4gIFxuICByZXR1cm4gdGV4dFxuICAgIC50cmltKCkgLy8gUmVtb3ZlIGxlYWRpbmcvdHJhaWxpbmcgd2hpdGVzcGFjZVxuICAgIC50b0xvd2VyQ2FzZSgpIC8vIENvbnZlcnQgdG8gbG93ZXJjYXNlXG4gICAgLm5vcm1hbGl6ZSgnTkZEJykgLy8gRGVjb21wb3NlIGFjY2VudGVkIGNoYXJhY3RlcnNcbiAgICAucmVwbGFjZSgvW1xcdTAzMDAtXFx1MDM2Zl0vZywgJycpIC8vIFJlbW92ZSBjb21iaW5pbmcgZGlhY3JpdGljYWwgbWFya3NcbiAgICAucmVwbGFjZSgvW1xcdTIwMEJcXHUyMDBEXFx1MjAwQ1xcdUZFRkYtXS9nLCAnJyk7IC8vIFJlbW92ZSB6ZXJvLXdpZHRoIHNwYWNlcyBhbmQgaHlwaGVuc1xufTtcblxuLyoqXG4gKiBDaGVja3MgaWYgdHdvIHN0cmluZ3MgYXJlIGVxdWFsIGFmdGVyIG5vcm1hbGl6YXRpb25cbiAqIFxuICogQHBhcmFtIGEgRmlyc3Qgc3RyaW5nIHRvIGNvbXBhcmVcbiAqIEBwYXJhbSBiIFNlY29uZCBzdHJpbmcgdG8gY29tcGFyZVxuICogQHJldHVybnMgVHJ1ZSBpZiBzdHJpbmdzIGFyZSBlcXVhbCBhZnRlciBub3JtYWxpemF0aW9uXG4gKi9cbmV4cG9ydCBjb25zdCBub3JtYWxpemVkRXF1YWxzID0gKGE6IHN0cmluZywgYjogc3RyaW5nKTogYm9vbGVhbiA9PiB7XG4gIHJldHVybiBub3JtYWxpemVUZXh0KGEpID09PSBub3JtYWxpemVUZXh0KGIpO1xufTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYSBzdHJpbmcgY29udGFpbnMgYW5vdGhlciBzdHJpbmcgYWZ0ZXIgbm9ybWFsaXphdGlvblxuICogXG4gKiBAcGFyYW0gdGV4dCBUaGUgdGV4dCB0byBzZWFyY2ggaW5cbiAqIEBwYXJhbSBzZWFyY2ggVGhlIHRleHQgdG8gc2VhcmNoIGZvclxuICogQHJldHVybnMgVHJ1ZSBpZiBub3JtYWxpemVkIHRleHQgY29udGFpbnMgbm9ybWFsaXplZCBzZWFyY2hcbiAqL1xuZXhwb3J0IGNvbnN0IG5vcm1hbGl6ZWRJbmNsdWRlcyA9ICh0ZXh0OiBzdHJpbmcsIHNlYXJjaDogc3RyaW5nKTogYm9vbGVhbiA9PiB7XG4gIHJldHVybiBub3JtYWxpemVUZXh0KHRleHQpLmluY2x1ZGVzKG5vcm1hbGl6ZVRleHQoc2VhcmNoKSk7XG59OyAiXSwibmFtZXMiOlsibm9ybWFsaXplVGV4dCIsInRleHQiLCJ0cmltIiwidG9Mb3dlckNhc2UiLCJub3JtYWxpemUiLCJyZXBsYWNlIiwibm9ybWFsaXplZEVxdWFscyIsImEiLCJiIiwibm9ybWFsaXplZEluY2x1ZGVzIiwic2VhcmNoIiwiaW5jbHVkZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/utils/text.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftheme-status&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Ftheme-status.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();