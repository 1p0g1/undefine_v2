"use strict";(()=>{var e={};e.id=103,e.ids=[103],e.modules={2744:(e,r,t)=>{t.a(e,async(e,s)=>{try{t.d(r,{_:()=>a});var n=t(2971),o=e([n]);let i=(n=(o.then?(await o)():o)[0]).z.object({SUPABASE_URL:n.z.string().url("Invalid Supabase URL"),SUPABASE_SERVICE_ROLE_KEY:n.z.string().min(1,"Supabase service role key is required"),SUPABASE_ANON_KEY:n.z.string().min(1,"Supabase anon key is required"),JWT_SECRET:n.z.string().min(1,"JWT secret is required"),DB_PROVIDER:n.z.literal("supabase").describe('Must be "supabase"'),NODE_ENV:n.z.enum(["development","production","test"]).default("development"),PORT:n.z.string().transform(Number).default("3001")}),a=function(){try{return i.parse(process.env)}catch(e){if(e instanceof n.z.ZodError){let r=e.issues.map(e=>`${e.path.join(".")}: ${e.message}`).join("\n");throw Error(`Invalid server environment variables:
${r}`)}throw e}}();s()}catch(e){s(e)}})},2971:e=>{e.exports=import("zod")},3480:(e,r,t)=>{e.exports=t(5600)},3939:e=>{e.exports=require("@supabase/supabase-js")},5600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6435:(e,r)=>{Object.defineProperty(r,"M",{enumerable:!0,get:function(){return function e(r,t){return t in r?r[t]:"then"in r&&"function"==typeof r.then?r.then(r=>e(r,t)):"function"==typeof r&&"default"===t?r:void 0}}})},8667:(e,r)=>{Object.defineProperty(r,"A",{enumerable:!0,get:function(){return t}});var t=function(e){return e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE",e.IMAGE="IMAGE",e}({})},8853:(e,r,t)=>{t.a(e,async(e,s)=>{try{t.r(r),t.d(r,{default:()=>a});var n=t(3939),o=t(2744),i=e([o]);if(o=(i.then?(await i)():i)[0],"production"===o._.NODE_ENV)throw Error("This route should not be built in production");let u=(0,n.createClient)(o._.SUPABASE_URL,o._.SUPABASE_SERVICE_ROLE_KEY);async function a(e,r){if("production"===o._.NODE_ENV)return console.error("[api/dev/reset-session] Attempted to access dev route in production"),r.status(403).json({error:"Not allowed in production"});if("POST"!==e.method)return r.status(405).json({error:"Method not allowed"});try{let t="";await new Promise(r=>{e.on("data",e=>{t+=e.toString()}),e.on("end",()=>r())});let{player_id:s,word:n}=JSON.parse(t);if(!s)return console.error("[api/dev/reset-session] Missing player_id in request"),r.status(400).json({error:"Missing player_id"});console.log(`[api/dev/reset-session] Resetting session for player ${s}`);let{error:o}=await u.from("game_sessions").delete().eq("player_id",s);if(o)return console.error("[api/dev/reset-session] Failed to delete game session:",o),r.status(500).json({error:"Failed to delete game session"});return console.log(`[api/dev/reset-session] Successfully reset session for player ${s}`),r.status(200).json({status:"reset",word:n??"unknown"})}catch(e){return console.error("[api/dev/reset-session] Unexpected error:",e),r.status(500).json({error:e instanceof Error?e.message:"Unknown error"})}}s()}catch(e){s(e)}})},8928:(e,r,t)=>{t.a(e,async(e,s)=>{try{t.r(r),t.d(r,{config:()=>l,default:()=>d,routeModule:()=>c});var n=t(3480),o=t(8667),i=t(6435),a=t(8853),u=e([a]);a=(u.then?(await u)():u)[0];let d=(0,i.M)(a,"default"),l=(0,i.M)(a,"config"),c=new n.PagesAPIRouteModule({definition:{kind:o.A.PAGES_API,page:"/api/dev/reset-session",pathname:"/api/dev/reset-session",bundlePath:"",filename:""},userland:a});s()}catch(e){s(e)}})}};var r=require("../../../webpack-api-runtime.js");r.C(e);var t=r(r.s=8928);module.exports=t})();